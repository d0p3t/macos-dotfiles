#!/usr/bin/env ruby

# Requirements
require "irb/completion"
require "irb/ext/save-history"

# Defaults
IRB.conf[:AUTO_INDENT] = true
IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:EVAL_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = %(#{ENV["HOME"]}/.config/irb/history.log)
IRB.conf[:PROMPT] ||= {}

info = if defined?(Rails)
  "#{RUBY_VERSION}|#{Rails.version}|#{Rails.application.class.parent_name.downcase}|#{Rails.env}"
else
  project = File.basename(`git rev-parse --show-toplevel 2> /dev/null`.strip).downcase
  [RUBY_VERSION, project].reject(&:empty?).join "|"
end

IRB.conf[:PROMPT][:ALCHEMISTS] = {
  PROMPT_I: "[#{info}]> ",
  PROMPT_N: "[#{info}]| ",
  PROMPT_C: "[#{info}]| ",
  PROMPT_S: "[#{info}]%l ",
  RETURN: "=> %s\n"
}

IRB.conf[:PROMPT_MODE] = :ALCHEMISTS

# Ruby on Rails

# Gem Enhancements (requirements)
%w(
  pry
  pry-byebug
  bond
  wirb
  hirb
  awesome_print
).each do |gem|
  begin
    require gem
  rescue LoadError
    STDERR.puts "Unable to load: #{gem}."
  end
end

# Gem Enhancements (settings)
[
  "Bond.start",
  "Wirb.start",
  "Hirb.enable",
].each do |config|
  begin
    instance_eval config
  rescue StandardError
    STDERR.puts "Unable to execute: #{config}."
  end
end

# ConsoleKit (CK) - A collection of utility methods when working within the IRB console.
class CK
  def self.locate object, method
    object.method(method).source_location
  end

  def self.search object, pattern
    object.methods.grep(/#{pattern}/)
  end

  def self.copy *args
    open("| pbcopy", "w") { |clipboard| clipboard.write args.join("\n") }
  end

  def self.paste
    open("| pbpaste", "r") { |clipboard| clipboard.read }
  end
end
