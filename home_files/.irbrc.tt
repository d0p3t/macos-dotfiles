#!/usr/bin/env ruby

# Requirements
require "irb/completion"
require "irb/ext/save-history"

# IRB Defaults
IRB.conf[:AUTO_INDENT] = true
IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:EVAL_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = %(#{ENV["HOME"]}/.irb_history)
IRB.conf[:PROMPT] ||= {}
IRB.conf[:PROMPT][:ALCHEMISTS] = {
  PROMPT_I: "[#{RUBY_VERSION}]> ",
  PROMPT_N: "[#{RUBY_VERSION}]| ",
  PROMPT_C: "[#{RUBY_VERSION}]| ",
  PROMPT_S: "[#{RUBY_VERSION}]%l ",
  RETURN: "=> %s\n"
}
IRB.conf[:PROMPT_MODE] = :ALCHEMISTS

if defined?(Rails)
  # Prompt
  require "logger"
  Rails.logger = Logger.new STDOUT
  rails_app_name = Rails.application.class.parent_name.downcase
  IRB.conf[:PROMPT][:ALCHEMISTS][:PROMPT_I] = "[#{RUBY_VERSION}|#{rails_app_name}|#{Rails.env}]> "
  IRB.conf[:PROMPT][:ALCHEMISTS][:PROMPT_N] = "[#{RUBY_VERSION}|#{rails_app_name}|#{Rails.env}]| "
  IRB.conf[:PROMPT][:ALCHEMISTS][:PROMPT_C] = "[#{RUBY_VERSION}|#{rails_app_name}|#{Rails.env}]| "
  IRB.conf[:PROMPT][:ALCHEMISTS][:PROMPT_S] = "[#{RUBY_VERSION}|#{rails_app_name}|#{Rails.env}]%l "

  # ActionController
  ActionController::Base.logger = Logger.new STDOUT
end

# Gem Enhancements (requirements)
%w(
  pry
  pry-byebug
  pry-state
  bond
  wirb
  hirb
  awesome_print
).each do |gem|
  begin
    require gem
  rescue LoadError
    STDERR.puts "Unable to load: #{gem}."
  end
end

# Gem Enhancements (settings)
[
  "Bond.start",
  "Wirb.start",
  "Hirb.enable",
].each do |config|
  begin
    instance_eval config
  rescue StandardError
    STDERR.puts "Unable to execute: #{config}."
  end
end

# ConsoleKit (CK) - A collection of utility methods when working within the IRB console.
class CK
  def self.locate object, method
    object.method(method).source_location
  end

  def self.search object, pattern
    object.methods.grep(/#{pattern}/)
  end

  def self.copy *args
    open("| pbcopy", "w") { |clipboard| clipboard.write args.join("\n") }
  end

  def self.paste
    open("| pbpaste", "r") { |clipboard| clipboard.read }
  end
end
